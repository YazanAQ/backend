module.exports = {
  env: {
    node: true,
  },
  parser: "@typescript-eslint/parser",
  parserOptions: {
    tsconfigRootDir: __dirname,
    project: "tsconfig.json",
    ecmaVersion: 2020,
    sourceType: "module",
  },
  plugins: [
    "@typescript-eslint",
    "eslint-plugin-import-helpers",
    "eslint-plugin-simple-import-sort",
    "prefer-arrow",
    "prettier",
    "simple-import-sort",
    "sort-destructure-keys",
    "sort-export-all",
    "unused-imports",
  ],
  extends: [
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@next/next/recommended",
    "eslint:recommended",
    "prettier",
  ],
  rules: {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "on",
    "@typescript-eslint/no-extra-semi": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { argsIgnorePattern: "^_", varsIgnorePattern: "^_" },
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      { blankLine: "always", prev: "*", next: "block-like" },
      { blankLine: "always", prev: "*", next: "return" },
      { blankLine: "always", prev: "*", next: ["interface", "type"] },
      { blankLine: "always", prev: "block-like", next: "*" },
      { blankLine: "always", prev: ["case", "default"], next: "*" },
      { blankLine: "always", prev: "iife", next: "*" },
    ],
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": ["error", "as-needed"],
    "constructor-super": "error",
    "dot-notation": "error",
    "func-names": ["error", "never"],
    "func-style": ["error", "expression"],
    "guard-for-in": "error",
    "import/extensions": "off",
    "constructor-super": "error",
    "dot-notation": "error",
    "no-useless-return": "error",
    eqeqeq: ["error", "smart"],
    "func-names": ["error", "never"],
    "func-style": ["error", "expression"],
    "guard-for-in": "error",
    "import/extensions": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "import/newline-after-import": ["error", { count: 1 }],
    "no-multiple-empty-lines": [2, { max: 1, maxEOF: 0 }],
    "simple-import-sort/imports": [
      "error",
      {
        groups: [
          ["^"],
          // Parent imports.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          //Relative imports.
          ["^(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
        ],
      },
    ],
    "import/no-extraneous-dependencies": "error",
    "import/no-unresolved": "off",
    "max-classes-per-file": ["warn", 1],
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": [
      "off",
      {
        allow: ["warn", "error"],
      },
    ],
    "no-debugger": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-new-wrappers": "error",
    "no-redeclare": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-var": "error",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        vars: "all",
        varsIgnorePattern: "^_",
        args: "after-used",
        argsIgnorePattern: "^_",
      },
    ],
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "prefer-arrow/prefer-arrow-functions": "warn",
    "prefer-const": "error",
    "prefer-destructuring": [
      "error",
      {
        array: false,
        object: true,
      },
    ],
    radix: "error",
    "sort-destructure-keys/sort-destructure-keys": 2,
    "sort-export-all/sort-export-all": [
      "error",
      "asc",
      {
        caseSensitive: false,
      },
    ],
    "sort-keys": ["error"],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-semi": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unified-signatures": "error",
    "use-isnan": "error",
    "valid-typeof": "off",
  },
  settings: {
    "import/resolver": {
      node: {
        paths: ["."],
        extensions: [".js", ".ts"],
        moduleDirectory: ["node_modules", "."],
      },
    },
  },
  ignorePatterns: [
    ".eslintrc.js",
    "**/*.config.*",
    "**/*.types.*",
    "**/*.base.*",
    "dist/",
  ],
};
